"use client";

import { useEffect, useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

interface PageLoaderProps {
  isLoading: boolean;
  onLoadingComplete?: () => void;
}

export function PageLoader({ isLoading, onLoadingComplete }: PageLoaderProps) {
  const [progress, setProgress] = useState(0);
  const [minDurationElapsed, setMinDurationElapsed] = useState(false);

  useEffect(() => {
    let progressInterval: NodeJS.Timeout;
    let minDurationTimeout: NodeJS.Timeout;

    if (isLoading) {
      setProgress(0);
      setMinDurationElapsed(false);

      // Set minimum duration of 2 seconds
      minDurationTimeout = setTimeout(() => {
        setMinDurationElapsed(true);
      }, 2000);

      // Initial fast progress to 90%
      progressInterval = setInterval(() => {
        setProgress((prevProgress) => {
          if (prevProgress < 90) {
            return prevProgress + 10;
          }
          clearInterval(progressInterval);
          return prevProgress;
        });
      }, 50);
    } else if (minDurationElapsed) {
      // Only complete to 100% if minimum duration has elapsed
      setProgress(100);
      const hideTimeout = setTimeout(() => {
        onLoadingComplete?.();
      }, 500);
      return () => clearTimeout(hideTimeout);
    }

    return () => {
      clearInterval(progressInterval);
      clearTimeout(minDurationTimeout);
    };
  }, [isLoading, minDurationElapsed, onLoadingComplete]);

  if (!isLoading && !minDurationElapsed) {
    return null;
  }

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 z-50 flex items-center justify-center bg-background"
      >
        <div className="flex flex-col items-center w-full max-w-2xl px-4">
          <div className="relative w-full h-64 md:h-80">
            {/* Hexagon Background Pattern */}
            <svg viewBox="0 0 100 100" className="absolute inset-0 h-full w-full opacity-20">
              <defs>
                <pattern
                  id="hexagons"
                  width="10"
                  height="17.32"
                  patternUnits="userSpaceOnUse"
                  patternTransform="scale(2) rotate(0)"
                >
                  <path
                    d="M5 0L0 8.66L5 17.32L15 17.32L20 8.66L15 0Z"
                    fill="none"
                    stroke="currentColor"
                    strokeOpacity="0.4"
                    strokeWidth="1"
                    className="text-primary/20"
                  />
                </pattern>
              </defs>
              <rect width="100" height="100" fill="url(#hexagons)" />
            </svg>

            {/* Animated orbiting accents */}
            <svg
              viewBox="0 0 100 100"
              className="absolute inset-0 h-full w-full"
            >
              {[
                { x: 30, y: 30, size: 2, delay: 0 },
                { x: 70, y: 25, size: 1.5, delay: 0.3 },
                { x: 45, y: 65, size: 2.5, delay: 0.6 },
                { x: 80, y: 70, size: 1.8, delay: 0.9 },
                { x: 25, y: 75, size: 2.2, delay: 1.2 },
                { x: 60, y: 40, size: 1.6, delay: 1.5 },
                { x: 35, y: 50, size: 2.8, delay: 1.8 },
                { x: 75, y: 55, size: 2, delay: 2.1 }
              ].map(({ x, y, size, delay }, i) => (
                <motion.circle
                  key={i}
                  cx={x}
                  cy={y}
                  r={size}
                  fill="currentColor"
                  className="text-primary"
                  initial={{ opacity: 0, scale: 0 }}
                  animate={{
                    opacity: [0, 1, 0],
                    scale: [0, 1.2, 0],
                  }}
                  transition={{
                    delay,
                    duration: 0.5,
                    repeat: Number.POSITIVE_INFINITY,
                    repeatDelay: 1,
                    ease: "easeInOut"
                  }}
                />
              ))}
            </svg>

            {/* Centered and Scaled RW Logo */}
            <motion.svg 
              viewBox="200 -300 800 800"
              className="absolute inset-0 h-full w-full"
              preserveAspectRatio="xMidYMid meet"
            >
              <motion.path
                d="m 496.84385,257.89751 q -1.82291,1.5625 -3.77604,2.60417 -1.82292,1.04166 -4.03646,1.69271 -2.08334,0.52083 -4.81772,0.65104 -2.60417,0.26042 -5.98959,0.26042 -8.72397,0 -19.66148,-3.38543 -10.80731,-3.38542 -22.13545,-8.72396 -11.32813,-5.33855 -22.39586,-12.10939 -10.93751,-6.77085 -20.18231,-13.54169 -4.68751,-3.51563 -8.85418,-7.16146 -4.03646,-3.77605 -7.42188,-7.03126 -3.38542,-3.38542 -5.98959,-5.72918 -2.60417,-2.47396 -4.29688,-3.38542 -0.39063,-0.26041 -1.56251,-0.39062 -1.04166,-0.26042 -2.60417,-0.39063 -1.5625,-0.26042 -3.25521,-0.39062 -1.69271,-0.26042 -3.25521,-0.26042 -11.58856,-0.52083 -16.40627,-6.38022 -0.65104,6.25001 -1.17188,11.84898 -0.52083,5.46875 -0.91146,9.76563 -0.39062,4.29688 -0.65104,7.16147 -0.13021,2.86459 -0.13021,3.90625 0,1.95313 0.13021,5.20834 0.13021,3.25522 0.26042,6.77085 0.26041,3.51563 0.39062,6.64063 0.13021,3.125 0.13021,4.81771 0,2.08334 -1.17188,4.68751 -1.17187,2.60417 -3.25521,4.81771 -1.95312,2.21355 -4.94792,3.77605 -2.86459,1.5625 -6.38022,1.5625 -5.46875,0 -8.59376,-3.51563 -3.125,-3.64584 -4.6875,-8.72397 -1.4323,-5.07813 -1.82292,-10.67709 -0.26042,-5.72918 -0.26042,-9.76564 0,-2.9948 0.65104,-9.2448 0.65105,-6.38022 1.56251,-14.84377 1.04166,-8.59376 2.34375,-18.61982 1.30208,-10.15626 2.60417,-20.57294 1.82292,-13.67189 3.125,-24.47919 1.30209,-10.80731 2.21355,-20.18232 l -14.06252,1.5625 q -4.42709,0 -7.29168,-0.65104 -2.73437,-0.65104 -5.85938,-2.47396 -2.21354,-1.4323 -3.51563,-4.5573 -1.30208,-3.125 -1.30208,-6.38022 0,-3.25521 1.17187,-6.38021 1.17188,-3.12501 3.38543,-4.94792 2.60416,-2.213549 6.38021,-2.734383 3.90626,-0.651042 8.07293,-0.911459 4.81771,-0.390626 8.98438,-1.041668 4.29688,-0.651043 9.24481,-2.473961 6.51042,-1.822919 15.62502,-4.296881 9.11459,-2.473961 19.27085,-4.687505 10.28647,-2.213545 20.70315,-3.776047 10.41668,-1.562502 19.53128,-1.562502 2.99479,0 8.33334,0.390626 5.33855,0.390625 11.58856,1.69271 6.25,1.302085 12.63022,3.645838 6.51042,2.213544 11.71876,6.119799 5.33855,3.906255 8.72397,9.505223 3.38542,5.59896 3.38542,13.41147 0,9.89585 -2.21354,17.96877 -2.08334,8.07293 -5.59897,14.58335 -3.51563,6.38022 -7.94271,11.45835 -4.42709,4.94792 -8.98439,8.85418 -7.55209,6.64063 -15.88544,12.2396 -8.33334,5.46875 -18.09898,10.41668 5.20834,3.90625 13.28127,9.76563 8.20314,5.72918 17.31773,11.71877 9.11459,5.98959 18.3594,11.19793 9.2448,5.20834 16.53648,8.20313 7.29167,2.86459 14.32293,5.33855 7.03126,2.34375 15.75523,3.38542 4.42709,0.52084 6.1198,2.73438 1.69271,2.21355 1.69271,5.46876 0,2.99479 -1.17188,5.72917 -1.04167,2.73438 -2.73438,4.5573 z M 345.02075,146.17862 q -1.17187,7.81251 -2.08333,16.40627 -0.91146,8.46355 -1.95313,16.79689 1.69271,-2.08333 3.90625,-3.77604 2.21355,-1.82292 4.68751,-3.12501 2.47396,-1.30208 4.94792,-1.95312 2.47396,-0.78125 4.5573,-0.78125 1.5625,0 4.29688,0.52083 2.86459,0.39063 5.85938,1.04167 3.12501,0.52083 5.85938,1.04167 2.73438,0.52083 4.16668,0.52083 1.43229,0 5.59896,-2.08334 4.16667,-2.08333 9.63543,-5.72917 5.59897,-3.64584 11.58856,-8.72397 5.98959,-5.07813 11.06772,-10.93751 5.07813,-5.85938 8.33334,-12.36981 3.25521,-6.64063 3.25521,-13.41147 0,-3.12501 -2.47396,-5.85939 -2.34375,-2.86458 -6.51042,-4.94792 -4.03647,-2.21354 -9.50522,-3.38542 -5.46876,-1.30208 -11.58856,-1.30208 -5.07813,0 -10.54689,0.91146 -5.46875,0.78125 -11.71876,2.34375 -6.25001,1.43229 -13.54168,3.51563 -7.16147,2.08333 -15.75523,4.6875 -0.52084,2.86459 -0.78125,7.03126 -0.26042,4.16667 -0.39063,8.46355 0,4.29688 -0.26041,8.46356 -0.13021,4.03646 -0.65105,6.77084 z M 771.06294,69.355609 q 0,3.255212 -0.52083,8.072926 -0.39063,4.687506 -1.30208,10.546888 -0.78126,5.729174 -1.95313,12.369807 -1.17188,6.51042 -2.60417,13.54168 -2.9948,14.19273 -6.1198,26.69274 -3.125,12.36981 -6.51043,21.48441 -3.38542,8.98438 -6.11979,17.05731 -2.73438,7.94272 -5.59897,14.58335 -0.65104,1.69271 -2.73438,6.51042 -2.08333,4.68751 -4.81771,10.93752 -2.73438,6.25 -5.85938,13.41147 -3.12501,7.03126 -5.85939,13.28127 -2.73437,6.25001 -4.81771,10.93751 -1.95313,4.5573 -2.60417,6.1198 -0.52083,1.30209 -2.21355,2.73438 -1.69271,1.43229 -3.90625,2.60417 -2.21354,1.17188 -4.68751,1.95313 -2.34375,0.65104 -4.16667,0.65104 -3.90625,0 -7.55209,-1.69271 -3.51563,-1.82292 -6.77084,-4.94792 -3.12501,-3.12501 -5.85938,-7.42189 -2.73438,-4.29688 -4.81772,-9.50522 l -30.33858,-74.47926 q -2.73437,6.25001 -6.51042,14.32294 -3.64584,7.94272 -7.81251,16.40627 -4.03646,8.33334 -8.20314,16.53648 -4.03646,8.20313 -7.55209,14.84376 -9.89584,18.88024 -18.4896,32.81254 v -0.1302 q -9.24481,15.49481 -15.2344,15.49481 -7.6823,0 -12.76043,-4.94793 -4.94792,-4.81771 -8.46355,-13.02085 -3.51563,-8.20313 -6.25001,-18.75002 -2.60417,-10.54689 -5.72917,-21.87502 -10.02606,-36.19797 -20.83336,-88.8022 -0.26042,-1.17187 -1.4323,-5.33854 -1.17187,-4.16668 -2.86458,-10.6771 v 0.13021 q -1.95313,-6.90105 -2.86459,-11.71877 -0.91146,-4.817711 -0.91146,-7.812506 0,-2.213545 1.04167,-4.557298 1.17188,-2.473961 2.99479,-4.427088 1.95313,-1.953128 4.42709,-3.255213 2.60417,-1.302085 5.46876,-1.302085 2.9948,0 5.98959,2.213545 2.9948,2.213544 5.85938,6.770841 5.07813,8.072927 8.07293,17.968774 1.04167,3.25521 2.21354,8.85418 1.30209,5.59896 2.9948,13.67189 1.82292,8.07292 4.16667,18.88023 2.47396,10.6771 5.72917,24.34899 2.9948,12.89064 5.07814,22.65627 2.08333,9.76564 3.64583,17.05732 1.56251,7.29167 2.73438,12.3698 1.17188,4.94793 2.34375,8.33335 6.51043,-11.06772 11.97919,-20.96357 5.46875,-9.89585 9.76563,-18.22919 4.29688,-8.33334 7.5521,-14.97398 3.25521,-6.64063 5.33854,-11.06772 3.38542,-7.03126 7.03126,-15.88543 3.64584,-8.98439 9.37501,-21.22399 0.78125,-1.5625 2.21355,-3.125 1.43229,-1.5625 3.38542,-2.73438 1.95313,-1.30208 4.16667,-2.08334 2.34375,-0.78125 4.5573,-0.78125 3.77604,0 7.81251,4.29688 4.03646,4.16668 7.81251,12.36981 0.39062,0.91146 1.69271,4.42709 1.43229,3.38542 3.25521,8.20313 1.82292,4.81772 3.90625,10.41668 2.21355,5.59897 4.16668,10.80731 2.08333,5.20834 3.64583,9.50522 1.69271,4.16667 2.60417,6.25001 7.29168,17.05731 11.32814,27.21357 4.03647,10.02605 6.38022,13.15106 4.94792,-8.98439 9.50522,-19.40107 4.5573,-10.54688 8.59376,-21.61461 4.03646,-11.19793 7.55209,-22.52607 3.51563,-11.32813 6.38022,-21.87502 2.99479,-10.80731 4.94792,-21.4844 2.08334,-10.6771 3.38542,-20.703154 1.43229,-10.156262 2.21355,-19.270857 0.78125,-9.114594 1.17187,-16.927104 0.13021,-1.302085 1.30209,-3.255212 1.17187,-1.953127 3.125,-3.776046 1.95313,-1.822919 4.29688,-3.125004 2.47396,-1.302085 4.94792,-1.302085 9.37502,0 12.63023,6.770842 2.86458,5.208339 2.86458,10.416679 z"
                fill="none"
                stroke="currentColor"
                strokeWidth="4"
                strokeLinecap="round"
                className="text-primary"
                initial={{ pathLength: 0, opacity: 0 }}
                animate={{ 
                  pathLength: 1,
                  opacity: 1,
                  strokeWidth: [2, 4, 3]
                }}
                transition={{ 
                  duration: 0.3,
                  ease: "easeInOut",
                  strokeWidth: { 
                    duration: 2, 
                    repeat: Infinity, 
                    repeatType: "reverse",
                    ease: "easeInOut"
                  }
                }}
              />
            </motion.svg>
          </div>
          
          <div className="mt-8 h-1 w-64 overflow-hidden rounded-full bg-muted">
            <motion.div
              className="h-full bg-primary"
              initial={{ width: 0 }}
              animate={{ width: `${progress}%` }}
              transition={{ duration: 0.1, ease: "linear" }}
            />
          </div>
          
          <motion.p
            className="mt-4 text-foreground"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.5 }}
          >
            Loading...
          </motion.p>
        </div>
      </motion.div>
    </AnimatePresence>
  );
}